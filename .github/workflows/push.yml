name: Push

on:
  push:
    branches:
      - main

env:
  DOCKER_FILE_PATH: Dockerfile
  GOLANG_VERSION: 1.16

jobs:
  build:
    name: Build
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will fail to push refs to dest repo      

    - name: Set up Go
      id: go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GOLANG_VERSION }}

    - name: Lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.39.0
        golangci-lint run --timeout=10m ./...
    # - name: Test
    #   run: GOFLAGS="-count=1" go test -v ./... -coverprofile cover.out

    - name: Generate Tag
      id: generate_tag
      uses: anothrNick/github-tag-action@1.32.0
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        RELEASE_BRANCHES: main
        WITH_V: true
        DEFAULT_BUMP: patch
        DRY_RUN: true

    - name: Login to Registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.STAKATER_DOCKERHUB_USERNAME }}
        password: ${{ secrets.STAKATER_DOCKERHUB_PASSWORD }}

    - name: Generate image repository path
      run: |
        echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Build and push Docker images
      uses: docker/build-push-action@v1
      with:
        context: .
        file: ${{ env.DOCKER_FILE_PATH  }}
        pull: true
        push: true
        build-args: BUILD_PARAMETERS=${{ env.BUILD_PARAMETERS }}
        cache-to: type=inline
        tags: |
          ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.new_tag }}
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}

    
##############################
## Add steps to generate required artifacts for a release here(helm chart, operator manifest etc.)
##############################
    
    - name: Push Latest Tag
      uses: anothrNick/github-tag-action@1.32.0
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        RELEASE_BRANCHES: main
        WITH_V: true
        DEFAULT_BUMP: patch

    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      if: always() # Pick up events even if the job fails or is canceled.
      with:
        status: ${{ job.status }}
        fields: repo,author,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.STAKATER_GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.STAKATER_DELIVERY_SLACK_WEBHOOK }}